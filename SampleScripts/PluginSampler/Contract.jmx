<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="xmeter_runtime_vars" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="api_endpoint" elementType="Argument">
            <stringProp name="Argument.name">api_endpoint</stringProp>
            <stringProp name="Argument.value">http://localhost:8545</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="UDV" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="fromUser0" elementType="Argument">
            <stringProp name="Argument.name">fromUser0</stringProp>
            <stringProp name="Argument.value">0x2dedf2abdbc997fe7ed4ca3d742570acd62517d8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">account.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">fromUser</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="部署调用合约线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515241250000</longProp>
        <longProp name="ThreadGroup.end_time">1515241250000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <net.xmeter.ethereum.sampler.CompileContract guiclass="net.xmeter.ethereum.gui.ComplieContractUI" testclass="net.xmeter.ethereum.sampler.CompileContract" testname="CompileContract" enabled="true">
          <stringProp name="ethereum.code">contract test {function multiply(uint a) returns(uint d) {return a *8;}}</stringProp>
        </net.xmeter.ethereum.sampler.CompileContract>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="EstimateGas" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="api_endpoint" elementType="Argument">
                <stringProp name="Argument.name">api_endpoint</stringProp>
                <stringProp name="Argument.value">${api_endpoint}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fromUser" elementType="Argument">
                <stringProp name="Argument.name">fromUser</stringProp>
                <stringProp name="Argument.value">${fromUser}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="binStr" elementType="Argument">
                <stringProp name="Argument.name">binStr</stringProp>
                <stringProp name="Argument.value">&lt;compiled bin code&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">net.xmeter.ethereum.javasampler.EstimateGas</stringProp>
        </JavaSampler>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="UnlockAccount" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="api_endpoint" elementType="Argument">
                <stringProp name="Argument.name">api_endpoint</stringProp>
                <stringProp name="Argument.value">${api_endpoint}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="account" elementType="Argument">
                <stringProp name="Argument.name">account</stringProp>
                <stringProp name="Argument.value">${fromUser}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="secret" elementType="Argument">
                <stringProp name="Argument.name">secret</stringProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="duration" elementType="Argument">
                <stringProp name="Argument.name">duration</stringProp>
                <stringProp name="Argument.value">60</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">net.xmeter.ethereum.javasampler.UnlockAccount</stringProp>
        </JavaSampler>
        <hashTree/>
        <net.xmeter.ethereum.sampler.DeployContract guiclass="net.xmeter.ethereum.gui.DeployContractUI" testclass="net.xmeter.ethereum.sampler.DeployContract" testname="DeployContract" enabled="true">
          <stringProp name="ethereum.bincode">0x60606040523415600e57600080fd5b60928061001c6000396000f300606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663c6888fa18114603b57600080fd5b3415604557600080fd5b604e6004356060565b60405190815260200160405180910390f35b600c02905600a165627a7a72305820649621b11d1e8fc5e351a0a93ac1b89d2a084960d1093560672750506cc2d3eb0029</stringProp>
          <stringProp name="gas">0x1661d</stringProp>
          <stringProp name="fromUser">${fromUser}</stringProp>
          <boolProp name="useCorrelatedData">true</boolProp>
        </net.xmeter.ethereum.sampler.DeployContract>
        <hashTree/>
        <net.xmeter.ethereum.sampler.GetTxReceipt guiclass="net.xmeter.ethereum.gui.GetTxReceiptUI" testclass="net.xmeter.ethereum.sampler.GetTxReceipt" testname="GetTxReceipt" enabled="true">
          <boolProp name="useCorrelatedData">true</boolProp>
          <stringProp name="txHash">0xfe94b8c680d0488a21107418a65b49ccee35e316efee00f2cda63b5d332b4d02</stringProp>
        </net.xmeter.ethereum.sampler.GetTxReceipt>
        <hashTree/>
        <net.xmeter.ethereum.sampler.InvokeContract guiclass="net.xmeter.ethereum.gui.InvokeContractUI" testclass="net.xmeter.ethereum.sampler.InvokeContract" testname="InvokeContract" enabled="true">
          <stringProp name="ethereum.account">${fromUser}</stringProp>
          <stringProp name="contract.address">0x538adb866b47157a5732eb05137cca2d8f7b6345</stringProp>
          <stringProp name="invoke.data">0xc6888fa1000000000000000000000000000000000000000000000000000000000000006${__threadNum}</stringProp>
          <stringProp name="ethereum.abi_file">[{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;a&quot;,&quot;type&quot;:&quot;uint256&quot;},{&quot;name&quot;:&quot;b&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;add&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;sum&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;a&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;multiply&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;d&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;type&quot;:&quot;function&quot;}]</stringProp>
          <stringProp name="ethereum.function_to_invoke">add</stringProp>
          <stringProp name="ethereum.para_types">uint256,uint256</stringProp>
          <stringProp name="ethereum.para_vals">11,12</stringProp>
          <boolProp name="useCorrelatedData">true</boolProp>
        </net.xmeter.ethereum.sampler.InvokeContract>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格察看结果" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
